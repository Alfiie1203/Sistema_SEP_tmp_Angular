import { Component, OnInit } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';
import { ActivatedRoute, Router } from '@angular/router';
import { ToastrService } from 'ngx-toastr';
import { AuthService } from 'src/app/service/auth.service';
import { SepService } from 'src/app/service/sep.service';

@Component({
  selector: 'app-reg-info-compania',
  templateUrl: './reg-info-compania.component.html',
  styleUrls: ['./reg-info-compania.component.css']
})
export class RegInfoCompaniaComponent implements OnInit {
  
  userLogged=this.auth.obtenerUser();
  email = localStorage.getItem('email');
  informacionUser: any[] = [];  
  informacionCorreoUser: any[] = [];
  createRegister: FormGroup;
  submitted = false;
  loading = false;
  fecha = new Date()
  id: string | null;
  titulo = "alala";
  idUser: string;
  umlUser: string | null;

  constructor(private fb: FormBuilder, private sepService: SepService, private toastr: ToastrService,
              private aRoute: ActivatedRoute, private auth: AuthService, private router: Router) {
    this.createRegister = this.fb.group({
      materiaPrima: ['',Validators.required],
      grupoEmpresarial: ['',Validators.required],
      nombreLegal: ['',Validators.required],
      sitioWeb: ['',Validators.required],
      capacidadProducion: ['',Validators.required],
      nombres: ['',Validators.required],
      apellidos: ['',Validators.required],
      paisRecidencia: ['',Validators.required],
      telefono: ['',Validators.required],
      correoElectronico: [''],
      cargo: ['',Validators.required],
      pais: ['',Validators.required],
      departamento: ['',Validators.required],
      municipio: ['',Validators.required],
      coordenadas: ['',Validators.required]
    })
    this.id = this.aRoute.snapshot.paramMap.get('id');
   }

  ngOnInit(): void {
  }

  getInformacionUserCorreo(){

    

    this.sepService.getUsers().subscribe(data=>{
      this.informacionUser.pop();
      data.forEach((element: any) => {
        
        this.informacionUser.push({
          id:element.payload.doc.id,
          ...element.payload.doc.data()
        })
        this.idUser = element.payload.doc.id;
        this.umlUser = element.payload.doc.data()['codigoUML']
        
      });
    });
  }



  agregar() {
    this.submitted = true;
    if(this.createRegister.invalid){
      this.toastr.error('Recuerda que todos los campos son obligatorios, no olvides seguir los ejemplos','Algo salio mal !',{
        timeOut: 5000,
        progressBar: true
      });
      return;
    }
    const infoCompania: any = {
      materiaPrima: this.createRegister.value.materiaPrima,
      grupoEmpresarial: this.createRegister.value.grupoEmpresarial,
      nombreLegal: this.createRegister.value.nombreLegal,
      millName: this.createRegister.value.nombreLegal,
      sitioWeb: this.createRegister.value.sitioWeb,
      capacidadProducion: this.createRegister.value.capacidadProducion,
      nombres: this.createRegister.value.nombres,
      apellidos: this.createRegister.value.apellidos,
      paisRecidencia: this.createRegister.value.paisRecidencia,
      telefono: this.createRegister.value.telefono,
      correoElectronico: this.email,
      cargo: this.createRegister.value.cargo,
      pais: this.createRegister.value.pais,
      departamento: this.createRegister.value.departamento,
      municipio: this.createRegister.value.municipio,
      coordenadas: this.createRegister.value.coordenadas,
      fechaCreacion: this.fecha,
      codEmpresa: "Sin Asignar",
      go1: "",
      go2: "",
      go3: "",
      go4: "",
      go5: "",
      go6: "",
      go7: "",
      go8: "",
      go9: "",
      go10: "",
      go11: "",
      go12: "",
      go13: "",
      go14: "",
      go15: "",
      go16: "",
      go17: "",
      go18: "",
      go19: "",
      go20: "",
      go21: "",
      go22: "",
      go23: "",
      go24: "",
      go25: "",
      go26: "",
      go27: "",
      go28: "",
      go29: "",
      go30: "",
      go31: "",
      go32: "",
      go33: "",
      go34: "",
      go35: "",
      go36: "",
      go37: "",
      go38: "",
      go39: "",
      go40: "",
      go41: "",
      go42: "",
      go43: "",
      go44: "",
      go45: "",
      go46: "",
      go47: "",
      go48: "",
      go49: "",
      go50: "",
      go51: "",
      go52: "",
      go53: "",
      go54: "",
      go55: "",
      go56: "",
      go57: "",
      go58: "",
      go59: "",
      go60: "",
      go61: "",
      go62: "",
      go63: "",
      go64: "",
      go65: "",
      go66: "",
      go67: "",
      go68: "",
      go69: "",
      go70: "",
      go71: "",
      go72: "",
      go73: "",
      go74: "",
      go75: "",
      go76: "",
      go77: "",
      go78: "",
      go79: "",
      go80: "",
      go81: "",
      go82: "",
      go83: "",
      go84: "",
      go85: "",
      go86: "",
      go87: "",
      go88: "",
      go89: "",
      go90: "",
      go91: "",
      go92: "",
      go93: "",
      go94: "",
      go95: "",
      go96: "",
      go97: "",
      go98: "",
      go99: "",
      ta1: "",
      ta2: "",
      ta3: "",
      ta4: "",
      ta5: "",
      ta6: "",
      ta7: "",
      ta8: "",
      ta9: "",
      ta10: "",
      ta11: "",
      ta12: "",
      ta13: "",
      ta14: "",
      ta15: "",
      ta16: "",
      ta17: "",
      ta18: "",
      ta19: "",
      ta20: "",
      ta21: "",
      ta22: "",
      ta23: "",
      ta24: "",
      ta25: "",
      ta26: "",
      ta27: "",
      ta28: "",
      ta29: "",
      ta30: "",
      ta31: "",
      ta32: "",
      ta33: "",
      ta34: "",
      ta35: "",
      ta36: "",
      ta37: "",
      ta38: "",
      ta39: "",
      ta40: "",
      ta41: "",
      ta42: "",
      ta43: "",
      ta44: "",
      ta45: "",
      ta46: "",
      ta47: "",
      ta48: "",
      ta49: "",
      ta50: "",
      ta51: "",
      ta52: "",
      ta53: "",
      ta54: "",
      ta55: "",
      ta56: "",
      ta57: "",
      ta58: "",
      ta59: "",
      ta60: "",
      ta61: "",
      ta62: "",
      ta63: "",
      ta64: "",
      ta65: "",
      ta66: "",
      ta67: "",
      ta68: "",
      ta69: "",
      ta70: "",
      ta71: "",
      ta72: "",
      ta73: "",
      ta74: "",
      ta75: "",
      ta76: "",
      ta77: "",
      ta78: "",
      ta79: "",
      ta80: "",
      ta81: "",
      ta82: "",
      ta83: "",
      ta84: "",
      ta85: "",
      ta86: "",
      ta87: "",
      ta88: "",
      ta89: "",
      ta90: "",
      ta91: "",
      ta92: "",
      ta93: "",
      ta94: "",
      ta95: "",
      ta96: "",
      ta97: "",
      ta98: "",
      ta99: "",
      ta100: "",
      ta101: "",
      ta102: "",
      ta103: "",
      ta104: "",
      ta105: "",
      ta106: "",
      ta107: "",
      ta108: "",
      ta109: "",
      ta110: "",
      ta111: "",
      ta112: "",
      ta113: "",
      ta114: "",
      ta115: "",
      ta116: "",
      ta117: "",
      ta118: "",
      ta119: "",
      ta120: "",
      ts1: "",
      ts2: "",
      ts3: "",
      ts4: "",
      ts5: "",
      ts6: "",
      ts7: "",
      ts8: "",
      ts9: "",
      ts10: "",
      ts11: "",
      ts12: "",
      ts13: "",
      ts14: "",
      ts15: "",
      ts16: "",
      ts17: "",
      ts18: "",
      ts19: "",
      ts20: "",
      ts21: "",
      ts22: "",
      ts23: "",
      ts24: "",
      ts25: "",
      ts26: "",
      ts27: "",
      ts28: "",
      ts29: "",
      ts30: "",
      ts31: "",
      ts32: "",
      ts33: "",
      ts34: "",
      ts35: "",
      ts36: "",
      ts37: "",
      ts38: "",
      ts39: "",
      ts40: "",
      ts41: "",
      ts42: "",
      ts43: "",
      ts44: "",
      ts45: "",
      ts46: "",
      ts47: "",
      ts48: "",
      ts49: "",
      ts50: "",
      ts51: "",
      ts52: "",
      ts53: "",
      ts54: "",
      ts55: "",
      ts56: "",
      ts57: "",
      ts58: "",
      ts59: "",
      ts60: "",
      ts61: "",
      ts62: "",
      ts63: "",
      ts64: "",
      ts65: "",
      ts66: "",
      ts67: "",
      ts68: "",
      ts69: "",
      ts70: "",
      ts71: "",
      ts72: "",
      ts73: "",
      ts74: "",
      ts75: "",
      ts76: "",
      ts77: "",
      ts78: "",
      ts79: "",
      ts80: "",
      ts81: "",
      ts82: "",
      ts83: "",
      ts84: "",
      ts85: "",
      ts86: "",
      ts87: "",
      ts88: "",
      ts89: "",
      ts90: "",
      ts91: "",
      ts92: "",
      ts93: "",
      ts94: "",
      ts95: "",
      ts96: "",
      ts97: "",
      ts98: "",
      ts99: "",
      ts100: "",
      ts101: "",
      ts102: "",
      ts103: "",
      ts104: "",
      ts105: "",
      ts106: "",
      ts107: "",
      ts108: "",
      ts109: "",
      ts110: "",
      ts111: "",
      ts112: "",
      ts113: "",
      ts114: "",
      ts115: "",
      ts116: "",
      ts117: "",
      ts118: "",
      ts119: "",
      ts120: "",
      ts121: "",
      ts122: "",
      ts123: "",
      ts124: "",
      ts125: "",
      ts126: "",
      ts127: "",
      ts128: "",
      ts129: "",
      ts130: "",
      ts131: "",
      ts132: "",
      ts133: "",
      ts134: "",
      ts135: "",
      ts136: "",
      ts137: "",
      ts138: "",
      ts139: "",
      ts140: "",
      ts141: "",
      ts142: "",
      ts143: "",
      ts144: "",
      ts145: "",
      ts146: "",
      ts147: "",
      ts148: "",
      ts149: "",
      ts150: "",
      ts151: "",
      ts152: "",
      ts153: "",
      ts154: "",
      ts155: "",
      ts156: "",
      ts157: "",
      ts158: "",
      ts159: "",
      ts160: "",
      ts161: "",
      ts162: "",
      ts163: "",
      ts164: "",
      ts165: "",
      ts166: "",
      ts167: "",
      ts168: "",
      ts169: "",
      ts170: "",
      ts171: "",
      ts172: "",
      ts173: "",
      ts174: "",
      ts175: "",
      ts176: "",
      ts177: "",
      ts178: "",
      ts179: "",
      ts180: "",
      ts181: "",
      ts182: "",
      ts183: "",
      ts184: "",
      ts185: "",
      ts186: "",
      ts187: "",
      ts188: "",
      ts189: "",
      ts190: "",
      ts191: "",
      ts192: "",
      ts193: "",
      ts194: "",
      ts195: "",
      ts196: "",
      ts197: "",
      ts198: "",
      ts199: "",
      ts200: "",
      ts201: "",
      ts202: "",
      ts203: "",
      ts204: "",
      ts205: "",
      ts206: "",
      ts207: "",
      tz1: "",
      tz2: "",
      tz3: "",
      tz4: "",
      tz5: "",
      tz6: "",
      tz7: "",
      tz8: "",
      tz9: "",
      tz10: "",
      tz11: "",
      evidenciata1 : "",
      evidenciata2 : "",
      evidenciata17: "",
      evidenciata18: "",
      evidenciata81: "",
      evidenciata84: "",
      evidenciata85: "",
      evidenciata86: "",
      evidenciata88: "",
      evidenciata89: "",
      evidenciata90: "",
      evidenciata91: "",
      evidenciata92: "",
      evidenciata93: "",
      evidenciata95: "",
      evidenciata96: "",
      ano: this.fecha.getFullYear(),


    }

    this.loading = true;
    this.sepService.agregarInformacionCompania(infoCompania).then(()=>{      
      
      this.toastr.success('Usted ha guardado el apartado de informacion de la compañía','Regitro guardado con exito!',{
        timeOut: 3000,
        progressBar: true
      });
      this.loading = false;
    }).catch(error =>{
      console.log(error);
      this.loading = false;
    });
    this.createRegister.reset();
    this.router.navigate(['/listar-respuestas-correo'])
  }

  editar() {
    this.createRegister.setValue({
      correoElectronico: "this.userLogged."
    })
  }


}
